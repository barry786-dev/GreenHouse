<%- include ('partials/head',{title: 'Gad Eden | User-Dash'})%>

<body id="body">
    <!-- header -->
    <header id="header">
        <%- include ('partials/nav3',{page:'dashboard',type:'WithLogoutBtn'})%>
    </header>
    <% if (alertModel.show===true) { %>
    <%- include ('partials/alertModel',{modelTitle:alertModel.modelTitle,modelMsg:alertModel.modelMsg})%>
    <% } %>
    <!--main-->
    <main id="main">
        <h1>Hello <%= userName%></h1>
        <!-- content -->
        <div class="content_switchers">
            <div class="container_switchers ">
        
        <div class="switch-holder">
            <div class="switch-label">
                <i class="fas fa-water" style="font-size:25px;color:blue"></i><span>Pump</span>
            </div>
            <div class="switch-toggle">
                <input type="checkbox" id="Pump">
                <label for="Pump"></label>
            </div>
        </div>

        <div class="switch-holder">
            <div class="switch-label">
                <i class="far fa-lightbulb" style="font-size:25px;color:red"></i><span>Light</span>
            </div>
            <div class="switch-toggle">
                <input type="checkbox" id="Light">
                <label for="Light"></label>
            </div>
        </div>

    </div>
            <div class="col-8">
                <form id="add_productSettings_form" action="/user/add-device" method="POST" class="">
                    <h2 class="">Update your product settings</h2>
                    <div class="form-group">
                        <label for="productNameByUser-input"> Product Name</label>
                        <input id="productNameByUser-input" type="text" name="productNameByUser" class=""
                            placeholder="Add name to your product as example kitchen-plants" minlength="2" maxlength="30"
                            required />
                    </div>
                    <h3>SoilHumidity-Settings</h3>
                    <div class="form-group">
                        <label for="minValue-input"> Minimum Value(from 1000)</label>
                        <input id="minValue-input" type="number" name="minValue" min="0" max="999" class=""
                            placeholder="min humidity value on scale of 1000" autocomplete />
                    </div>
                    <div class="form-group">
                        <label for="period-input"> start each (Hours)</label>
                        <input id="period-input" type="number" name="period" min="0" max="168" class=""
                            placeholder="water pump starting each how many (hours)" autocomplete />
                    </div>
                    <div class="form-group">
                        <label for="runTime-input"> Run time(seconds)</label>
                        <input id="runTime-input" type="number" name="runTime" min="0" max="600" class=""
                            placeholder="runTime by seconds" autocomplete />
                    </div>
                    <div class="form-group">
                        <button type="submit" id="addSettings-button">
                            Update your product sittings
                        </button>
                    </div>
                </form>
            </div>

            
        </div>
    </main>
    <!-- footer -->
    <%- include ('partials/footer')%>
    <script src="/js/pristine/dist/pristine.min.js"></script>
    <script src="/js/publicScript.js"></script>
    <script>
        const addSettingsForm = document.getElementById('add_productSettings_form');
        const addSettingsBtn = document.getElementById('addSettings-button');
        addSettingsBtn.addEventListener('click', async (e) => {
            e.preventDefault();
            const pristine = new Pristine(add_productSettings_form);
            const valid = pristine.validate();
            if (valid) {
                // addSettingsForm.submit();
            }
        });
    </script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const messages = document.getElementById('messages');
      let socket = io();
      socket.on('connect', () => {
        console.log('connected');
      });
      socket.on('serverEventToBrowser', (data) => {
        console.log('event from server has received');
        const item = document.createElement('li');
        item.textContent = JSON.stringify(data, null, 2);
        messages.appendChild(item);
      });
      socket.on('disconnect', () => {
        console.log(
          'the server disconnected, the browser will keep trying to connect or you close the page and try later'
        );
      });
      const pumpInput = document.getElementById('Pump');
        pumpInput.addEventListener('change', (e) => {
            const pump = e.target.checked;
            socket.emit('pumpEventBrowserToServer', { // emit to server when checkbox is checked
                pump
            });
        });
        /* socket.on('pumpStatusServerToBrowser', (data) => { //start check the real pump stat when load this page
        console.log('event from server has received');
        pumpInput.checked = data.pump;
      }); */
    </script>
</body>

</html>